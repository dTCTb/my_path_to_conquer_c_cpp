#include <iostream>
#include <string>

using namespace std;

class Solution {
  public:
    static int maxScore(string s) {
        int arr[2]{}, l{}, ans{};

        for (char c : s)
            ++arr[c == '0' ? 0 : 1];

        cout << "'0': " << arr[0] << " '1': " << arr[1] << '\n';

        for (size_t i{}; i < s.size() - 1; ++i)
            if (s[i] == '0')
                ans = max(ans, (--arr[0], ++l) + arr[1]);
            else
                ans = max(ans, (--arr[1], l) + arr[1]);

        cout << "maximum score: " << ans << '\n';
        return ans;
    }
};

int main() {
    Solution::maxScore("011101");
    Solution::maxScore("00111");
    Solution::maxScore("00");
    Solution::maxScore("01");
    Solution::maxScore("010");
    Solution::maxScore("01101");
    Solution::maxScore("0010");
    Solution::maxScore("1111000");
    Solution::maxScore(
        "0001101001111111001000010001111100000010001000101000110010101011010110"
        "1110011111110100011010100100111100101111110110101011100111001101100111"
        "1110101111001110100010000000111110000000000110011101110010111011010000"
        "0010100100001001010111111111000100011110100111101001001011001110000100"
        "0001110011100101011010010110001110110001010111110100011011101000100000"
        "1111110111000000011111000111010011011001110111111001011011011100111111"
        "1000000100111110001110000101000001101001010010110010000110011110101111"
        "1110100010");
    Solution::maxScore(
        "0111011111111111101011001110001111010100111101001101100101000001000100"
        "1010000110001110100010110001000110010000110111010011010000101110100010"
        "0010101111110111101110100010011001001101110000100100001010110011101110"
        "1101101110110011000100001100111110010100100100001101010100010001000001"
        "0001011111000010111100001110110010111111110100000100100101110111001001"
        "1101000100011001110010001000001011010110010110100011011111011100010111"
        "1111001110001000101001011101100101111010111010111110011011010100010001"
        "0111010011");
}
